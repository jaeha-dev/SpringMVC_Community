<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

    <!-- Creates the Spring Container shared by all Servlets and Filters -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/spring/root-context.xml
            /WEB-INF/spring/security-context.xml
        </param-value>
    </context-param>

    <!-- Processes application requests -->
    <servlet>
        <servlet-name>appServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>
                /WEB-INF/spring/appServlet/servlet-context.xml
                /WEB-INF/spring/appServlet/interceptor-context.xml
            </param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <!-- Websocket 을 위한 설정 (async 지원) (서블릿 3.0(web-app_3_0) 버전 변경 필수!)-->
        <!-- 비동기 지원 이유: 2개 이상의 클라이언트가 동시에 데이터 전송 시, 제어를 위해. -->
        <async-supported>true</async-supported>
    </servlet>

    <servlet-mapping>
        <servlet-name>appServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- 에러 페이지 -->
    <error-page>
        <error-code>400</error-code>
        <location>/error/400</location>
    </error-page>
    <error-page>
        <error-code>403</error-code>
        <location>/error/403</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/error/404</location>
    </error-page>
    <error-page>
        <error-code>405</error-code>
        <location>/error/405</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/error/500</location>
    </error-page>
    <error-page>
        <error-code>503</error-code>
        <location>/error/503</location>
    </error-page>

    <!-- 세션 타임아웃(30분) -->
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>

    <!-- 인코딩 필터 등록 -->
    <!-- 참고: https://babosonyun.wordpress.com/2013/07/09/spring-utf-8-한글깨짐-처리-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- PUT/DELETE 메소드 지원을 위한 필터 등록 (인코딩 필터 다음에 등록해야 한글이 깨지지 않는다.) -->
    <!-- PUT/DELETE 메소드 사용 시 허용하지 않는 메소드 문제로 GET/POST 메소드만 사용하는 것으로 변경한다. -->
    <!--    <filter>-->
    <!--        <filter-name>hiddenHttpMethodFilter</filter-name>-->
    <!--        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>-->
    <!--    </filter>-->
    <!--    <filter-mapping>-->
    <!--        <filter-name>hiddenHttpMethodFilter</filter-name>-->
    <!--        <url-pattern>/*</url-pattern>-->
    <!--    </filter-mapping>-->

    <!-- 스프링 시큐리티 필터 등록 -->
    <!-- HttpSessionEventPublisher: 사용자가 다른 브라우저로 동시 로그인하는 것을 방지한다. (동작 X) -->
    <!-- DelegatingFilterProxy: 스프링 시큐리티가 모든 애플리케이션 요청을 감싸게 하여 모든 요청에 보안이 적용되게 하는 서블릿 필터이다. -->
    <listener>
        <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
    </listener>
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <!-- 톰캣 에러 페이지 지정 시, 시큐리티 태그 미적용 문제 (참고: https://stackoverflow.com/questions/16393309/spring-security-tags-do-not-work-in-error-pages)-->
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

</web-app>