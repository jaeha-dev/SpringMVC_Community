<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mappers.UserMapper">

    <!-- Java - MySQL Mapper -->
    <resultMap id="UserMap" type="User">
        <result property="id" column="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
        <result property="email" column="email" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="password" column="password" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="name" column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="createdAt" column="created_at" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="updatedAt" column="updated_at" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="role" column="role" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="isEnabled" column="is_enabled" javaType="java.lang.Boolean" jdbcType="TINYINT"/>
    </resultMap>

    <!-- INSERT                                                                                                         INSERT -->

    <!-- 계정 등록 -->
    <insert id="insertUser" parameterType="string">
        INSERT
        INTO user (email, password, name, phone, nickname)
        VALUES (#{email}, #{password}, #{name}, #{phone}, #{nickname})
    </insert>

    <!-- SELECT                                                                                                         SELECT -->

    <!-- 이메일 중복 검사 -->
    <select id="countUserByEmail" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM user
		WHERE email = #{email}
    </select>

    <!-- 연락처 중복 검사 -->
    <select id="countUserByPhone" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM user
		WHERE phone = #{phone}
    </select>

    <!-- 닉네임 중복 검사 -->
    <select id="countUserByNickname" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM user
		WHERE nickname = #{nickname}
    </select>

    <!-- 전체 계정 개수 조회 -->
    <select id="countAllUser" parameterType="boolean" resultType="int">
        SELECT COUNT(*)
        FROM user
        WHERE is_enabled = #{isEnabled}
    </select>

    <!-- 계정 목록 조회 -->
    <select id="selectAllUser" parameterType="boolean" resultType="User">
        SELECT *
        FROM user
        WHERE is_enabled = #{isEnabled}
    </select>

    <!-- 계정 상세 조회 -->
    <select id="selectUser" parameterType="map" resultType="User">
        SELECT *
        FROM user
        <choose>
            <when test="isRoleM">WHERE email = #{email}</when>
            <otherwise>WHERE email = #{email} AND password = #{password}</otherwise>
        </choose>
    </select>

    <!-- 계정 로그인 -->
    <select id="selectUserByEmail" parameterType="string" resultType="CustomUserDetails">
        SELECT *
        FROM user
        WHERE email = #{email}
    </select>

    <!-- UPDATE                                                                                                         UPDATE -->

    <!-- 계정 로그인 일자 수정 -->
    <update id="updateUserUpdatedAt" parameterType="string">
        UPDATE user
		SET updated_at = now()
		WHERE email = #{email}
    </update>

    <!-- 계정 이메일 수정 (관리자 권한으로 수정 불가) -->
    <update id="updateUserEmail" parameterType="string">
        UPDATE user
		SET email = #{email}
		WHERE email = #{email} AND password = #{password}
    </update>

    <!-- 계정 이름 수정 (관리자 권한으로 수정 불가) -->
    <update id="updateUserName" parameterType="string">
        UPDATE user
		SET name = #{name}
		WHERE email = #{email} AND password = #{password}
    </update>

    <!-- 계정 연락처 수정 (관리자 권한으로 수정 불가) -->
    <update id="updateUserPhone" parameterType="string">
        UPDATE user
		SET phone = #{phone}
		WHERE email = #{email} AND password = #{password}
    </update>

    <!-- 계정 닉네임 수정 (관리자 권한으로 수정 불가) -->
    <update id="updateUserNickName" parameterType="string">
        UPDATE user
		SET nickname = #{nickname}
		WHERE email = #{email} AND password = #{password}
    </update>

    <!-- 계정 비밀번호 수정(관리자 권한으로 수정 불가)  -->
    <update id="updateUserPassword" parameterType="string">
        UPDATE user
		SET password = #{password}
		WHERE email = #{email} AND password = #{password}
    </update>

    <!-- 계정 권한 수정 -->
    <update id="updateUserRole" parameterType="User">
        UPDATE user
		SET role = #{role}
		WHERE email = #{email}
    </update>

    <!-- 계정 수정 -->
    <!-- https://mybatis.org/mybatis-3/ko/dynamic-sql.html -->
    <update id="updateUser" parameterType="map">
        UPDATE user
        <set>
            <if test="user.email != null">email = #{user.email},</if>
            <if test="user.name != null">name = #{user.name},</if>
            <if test="user.phone != null">phone = #{user.phone},</if>
            <if test="user.nickname != null">nickname = #{user.nickname}</if>
        </set>
        WHERE email = #{userEmail}
    </update>

    <!-- 계정 활성 수정 -->
    <update id="updateUserIsEnabled" parameterType="map">
        UPDATE user
		SET is_enabled = #{isEnabled}
        <choose>
            <when test="isRoleM">WHERE email = #{email}</when>
            <otherwise>WHERE email = #{email} AND password = #{password}</otherwise>
        </choose>
    </update>

    <!-- DELETE                                                                                                         DELETE -->

</mapper>